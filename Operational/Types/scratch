cong-SimpleRow : (sr : SimpleRow Type Δ R[ κ ]) {wf₁ : WFRow sr} {wf₂ : WFRow sr} → 
                ⦅ sr ⦆ wf₁ ≡ ⦅ sr ⦆ wf₂
cong-SimpleRow sr {wf₁} {wf₂} rewrite MerePropWFRow sr wf₁ wf₂ = refl


WFRow : ∀ {Ty} → SimpleRow Ty Δ R[ κ ] → Set
WFRow ρ = True (noDup? (labels ρ))

-- Any proof that ρ has no duplicates is identical
MerePropWFRow : ∀ {Ty} (ρ : SimpleRow Ty Δ R[ κ ])  → MereProp (WFRow ρ)
MerePropWFRow (ℓ ▹ τ) p₁ p₂ = refl
MerePropWFRow (ℓ ▹ τ ⸴ ρ) p₁ p₂ with ℓ ∈? labels ρ
... | yes p = refl
... | no p  with labels ρ | noDup? (labels ρ)
...              | c | yes q = refl
...              | c | no  q = refl

renₖ-id (⦅ ρ ⦆ wf₁) with renRowₖ-id ρ | wfRowRen id ρ wf₁
... | eq | wf₂  rewrite eq = cong-SimpleRow ρ 

wfRowRen : (ρ : Renamingₖ Δ₁ Δ₂) → (sr : SimpleRow Type Δ₁ R[ κ ]) → WFRow sr →  WFRow (renRowₖ ρ sr)
wfRowRen ρ sr WFsr rewrite labelsFixedByRen ρ sr = WFsr 

labelsFixedByRen ρ (ℓ ▹ τ) = refl
labelsFixedByRen ρ (ℓ ▹ τ ⸴ ρ₁) rewrite labelsFixedByRen ρ ρ₁ = refl